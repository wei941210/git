package com.en.adback.controller.analisys;

import com.en.adback.common.Common;
import com.en.adback.common.MessageModel;
import com.en.adback.controller.sys.UserLogs;
import com.en.adback.entity.AdvertCount;
import com.en.adback.service.analisys.AdvertCountService;
import io.swagger.annotations.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Api(value="广告统计查询",tags={"广告统计查询webapi 接口"})
@RestController
@CrossOrigin
@RequestMapping(value = "/api/advertCount", method = {RequestMethod.GET, RequestMethod.POST}, produces = "application/json;charset=UTF-8")

public class AdvertCountCtrl {

    @Autowired private AdvertCountService svr;
    @Autowired private UserLogs ulogs;

    @ApiOperation( value = "一年投放广告客户量",notes = "按条件查询一年投放广告客户量" )
    @ApiImplicitParams({
            @ApiImplicitParam(name = "year", value = "年份", required = false, dataType = "String", paramType = "query"),
    })
    @ApiResponses({ @ApiResponse(code = 1, message = "操作成功"),
            @ApiResponse(code = 2, message = "服务器内部异常"),
            @ApiResponse(code =3, message = "权限不足") })
    @GetMapping(value = "/getAdcorpAndBlankCount")
    public MessageModel getAdcorpAndBlankCount(String customerYear,String loginUserId,
                                               String loginGroupRoleId,String loginRoleId,HttpServletRequest request){
        MessageModel model=new MessageModel();
        Map<String,Object> map=new HashMap<String, Object>();
        map.put("year",customerYear);
        List<AdvertCount> customerlist=svr.getAdcorpAndBlankCount(map);
        map.clear();
        map.put("list",customerlist);
        model.setData(map);
        model.setResultCode(customerlist.size()>0?"1":"2");
        model.setResultMsg("success");
        String ip = Common.getIpAddr(request);
        ulogs.insertGetLogs(loginUserId,loginGroupRoleId,loginRoleId,ip,"查询一年广告投放客户量");
        return model;
    }

    @ApiOperation( value = "行业投放广告数量",notes = "按条件查询行业投放广告数量" )
    @ApiImplicitParams({
            @ApiImplicitParam(name = "endTime", value = "截止时间", required = false, dataType = "String", paramType = "query"),
    })
    @ApiResponses({ @ApiResponse(code = 1, message = "操作成功"),
            @ApiResponse(code = 2, message = "服务器内部异常"),
            @ApiResponse(code =3, message = "权限不足") })
    @GetMapping(value = "/getTradeCount")
    public MessageModel getTradeCount(String tradeEndTime,String loginUserId,
                                      String loginGroupRoleId,String loginRoleId,HttpServletRequest request){
        MessageModel model=new MessageModel();
        Map<String,Object> map=new HashMap<String, Object>();
        map.put("endTime",tradeEndTime);
        List<AdvertCount> list=svr.getTradeCount(map);
        map.clear();
        map.put("list",list);
        model.setData(map);
        model.setResultCode(list.size()>0?"1":"2");
        model.setResultMsg("success");
        String ip = Common.getIpAddr(request);
        ulogs.insertGetLogs(loginUserId,loginGroupRoleId,loginRoleId,ip,"查询行业广告投放数量");
        return model;
    }

    @ApiOperation( value = "品牌投放广告数量",notes = "按条件查询品牌投放广告数量" )
    @ApiImplicitParams({
            @ApiImplicitParam(name = "endTime", value = "截止时间", required = false, dataType = "String", paramType = "query"),
    })
    @ApiResponses({ @ApiResponse(code = 1, message = "操作成功"),
            @ApiResponse(code = 2, message = "服务器内部异常"),
            @ApiResponse(code =3, message = "权限不足") })
    @GetMapping(value = "/getBlankCount")
    public MessageModel getBlankCount(String blankEndTime,String loginUserId,
                                      String loginGroupRoleId,String loginRoleId,HttpServletRequest request){
        MessageModel model=new MessageModel();
        Map<String,Object> map=new HashMap<String, Object>();
        map.put("endTime",blankEndTime);
        List<AdvertCount> list=svr.getBlankCount(map);
        map.clear();
        map.put("list",list);
        model.setData(map);
        model.setResultCode(list.size()>0?"1":"2");
        model.setResultMsg("success");
        String ip = Common.getIpAddr(request);
        ulogs.insertGetLogs(loginUserId,loginGroupRoleId,loginRoleId,ip,"查询品牌广告投放数量");
        return model;
    }

    @ApiOperation( value = "每年各策略投放广告数量",notes = "按条件查询每年各策略投放广告数量" )
    @ApiImplicitParams({
            @ApiImplicitParam(name = "year", value = "年份", required = false, dataType = "String", paramType = "query"),
    })
    @ApiResponses({ @ApiResponse(code = 1, message = "操作成功"),
            @ApiResponse(code = 2, message = "服务器内部异常"),
            @ApiResponse(code =3, message = "权限不足") })
    @GetMapping(value = "/getPolicyCount")
    public MessageModel getPolicyCount(String policyYear,String loginUserId,
                                       String loginGroupRoleId,String loginRoleId,HttpServletRequest request){
        MessageModel model=new MessageModel();
        Map<String,Object> map=new HashMap<String, Object>();
        map.put("year",policyYear);
        List<AdvertCount> list=svr.getPolicyCount(map);
        map.clear();
        map.put("list",list);
        model.setData(map);
        model.setResultCode(list.size()>0?"1":"2");
        model.setResultMsg("success");
        String ip = Common.getIpAddr(request);
        ulogs.insertGetLogs(loginUserId,loginGroupRoleId,loginRoleId,ip,"查询每年各策略投放广告数量");
        return model;
    }

    @ApiOperation( value = "各区县投放广告数量",notes = "按条件查询各区县投放广告数量" )
    @ApiImplicitParams({
            @ApiImplicitParam(name = "endTime", value = "截止时间", required = false, dataType = "String", paramType = "query"),
    })
    @ApiResponses({ @ApiResponse(code = 1, message = "操作成功"),
            @ApiResponse(code = 2, message = "服务器内部异常"),
            @ApiResponse(code =3, message = "权限不足") })
    @GetMapping(value = "/getQuxianCount")
    public MessageModel getQuxianCount(String quxianEndTime,String loginUserId,
                                       String loginGroupRoleId,String loginRoleId,HttpServletRequest request){
        MessageModel model=new MessageModel();
        Map<String,Object> map=new HashMap<String, Object>();
        map.put("endTime",quxianEndTime);
        List<AdvertCount> list=svr.getQuxianCount(map);
        map.clear();
        map.put("list",list);
        model.setData(map);
        model.setResultCode(list.size()>0?"1":"2");
        model.setResultMsg("success");
        String ip = Common.getIpAddr(request);
        ulogs.insertGetLogs(loginUserId,loginGroupRoleId,loginRoleId,ip,"查询各区县投放广告数量");
        return model;
    }
}
